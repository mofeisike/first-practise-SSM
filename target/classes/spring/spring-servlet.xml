<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc
     http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:annotation-config/>
    <context:component-scan base-package="com.mofei.service"/>

    <!---启动注解,配置一个注解扫描的包-->
    <context:component-scan base-package="com.mofei.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:default-servlet-handler/>

    <!-- 只加上它一个的话相当于全部让它处理了，-->
    <!--加上MVC驱动-->
    <mvc:annotation-driven>
        <!--配置消息转换器以支持JSON的使用-->
        <mvc:message-converters>
            <!--spring3.0到4的版本要加上-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <!--文件上传解析器 id="multipartResolver" 必须要写这个,原因是源代码里面写死了这个-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置最大上传总大小 单位bytes-->
        <property name="maxInMemorySize" value="104857600"/>
        <!--指定上传的编码-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--单个文件上传文件大小-->
        <property name="maxUploadSize" value="10240000"/>
    </bean>

    <!--拦截器-->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--&lt;!&ndash;-->
    <!--/*的写法只能拦截/name的方法,只能由一层,不是多层拦截-->
    <!--/**/*是表示任意方法的任意类都实现拦截-->
    <!--&ndash;&gt;-->
    <!--<mvc:mapping path="/**/*"/>-->
    <!--<bean class="com.sz.interceptors.MethodTimerInterceptor"/>-->
    <!--</mvc:interceptor>-->
    <!--<mvc:interceptor>-->
    <!--&lt;!&ndash;-->
    <!--只想拦截/user/**/*-->
    <!--还需要开放登录权限-->
    <!--&ndash;&gt;-->
    <!--<mvc:mapping path="/user/**/*"/>-->
    <!--&lt;!&ndash;排除登录的这个URL&ndash;&gt;-->
    <!--<mvc:exclude-mapping path="/user/logined"/>-->
    <!--<bean class="com.sz.interceptors.SeesionInterceptor">-->
    <!--</bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

</beans>
